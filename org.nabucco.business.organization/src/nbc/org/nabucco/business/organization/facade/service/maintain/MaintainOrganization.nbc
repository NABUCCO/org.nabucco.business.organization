/*
* Copyright 2010 PRODYNA AG
*
* Licensed under the Eclipse Public License (EPL), Version 1.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.opensource.org/licenses/eclipse-1.0.php or
* http://www.nabucco-source.org/nabucco-license.html
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
package org.nabucco.business.organization.facade.service.maintain;

import org.nabucco.framework.base.facade.exception.service.MaintainException;
import org.nabucco.business.organization.facade.message.OrganizationMasterMsg;
import org.nabucco.business.organization.facade.message.DepartmentMsg;
import org.nabucco.business.organization.facade.message.SubsidiaryMsg;
import org.nabucco.business.organization.facade.message.CorporationMsg;
import org.nabucco.business.organization.facade.message.CustomerMsg;
import org.nabucco.business.organization.facade.message.VendorMsg;


@Author			Dominic Trumpfheller
@Company		PRODYNA AG
@Date			2010-11-30
@Version		1.0
@Description	Maintain Service for Organization
public Service MaintainOrganization {

	@Inject
	private EntityManager[1] entityManager;

    @ManualImplementation
	@JoinPoint 		org.nabucco.aspect.validating
	@JoinPoint		org.nabucco.aspect.indexing
	@JoinPoint 		org.nabucco.aspect.transitioning
	public OrganizationMasterMsg maintainOrganizationMaster(OrganizationMasterMsg msg) throws MaintainException;

    @ManualImplementation
	@JoinPoint 		org.nabucco.aspect.validating
	@JoinPoint		org.nabucco.aspect.relating
	@JoinPoint		org.nabucco.aspect.resolving
	@JoinPoint		org.nabucco.aspect.indexing
	@JoinPoint 		org.nabucco.aspect.journaling
	@JoinPoint 		org.nabucco.aspect.transitioning
	public DepartmentMsg maintainDepartment(DepartmentMsg msg) throws MaintainException;

    @ManualImplementation
	@JoinPoint 		org.nabucco.aspect.validating
	@JoinPoint		org.nabucco.aspect.relating
	@JoinPoint		org.nabucco.aspect.resolving
	@JoinPoint		org.nabucco.aspect.indexing
	@JoinPoint 		org.nabucco.aspect.journaling
	@JoinPoint 		org.nabucco.aspect.transitioning
	public SubsidiaryMsg maintainSubsidiary(SubsidiaryMsg msg) throws MaintainException;
		
    @ManualImplementation
	@JoinPoint 		org.nabucco.aspect.validating
	@JoinPoint		org.nabucco.aspect.relating
	@JoinPoint		org.nabucco.aspect.resolving
	@JoinPoint		org.nabucco.aspect.indexing
	@JoinPoint 		org.nabucco.aspect.journaling
	@JoinPoint 		org.nabucco.aspect.transitioning
	public CorporationMsg maintainCorporation(CorporationMsg msg) throws MaintainException;

    @ManualImplementation
	@JoinPoint 		org.nabucco.aspect.validating
	@JoinPoint		org.nabucco.aspect.relating
	@JoinPoint		org.nabucco.aspect.resolving
	@JoinPoint		org.nabucco.aspect.indexing
	@JoinPoint 		org.nabucco.aspect.journaling
	@JoinPoint 		org.nabucco.aspect.transitioning
	public CustomerMsg maintainCustomer(CustomerMsg msg) throws MaintainException;
		
	@ManualImplementation
	@JoinPoint 		org.nabucco.aspect.validating
	@JoinPoint		org.nabucco.aspect.relating
	@JoinPoint		org.nabucco.aspect.resolving
	@JoinPoint		org.nabucco.aspect.indexing
	@JoinPoint 		org.nabucco.aspect.journaling
	@JoinPoint 		org.nabucco.aspect.transitioning
	public CustomerMsg maintainCustomerDepartment(CustomerMsg msg) throws MaintainException;

    @ManualImplementation
	@JoinPoint 		org.nabucco.aspect.validating
	@JoinPoint		org.nabucco.aspect.relating
	@JoinPoint		org.nabucco.aspect.resolving
	@JoinPoint		org.nabucco.aspect.indexing
	@JoinPoint 		org.nabucco.aspect.journaling
	@JoinPoint 		org.nabucco.aspect.transitioning
	public VendorMsg maintainVendor(VendorMsg msg) throws MaintainException;
	
}
